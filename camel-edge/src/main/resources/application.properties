# Uncomment to trust self signed certificates if they are presented by the Kubernetes API server
quarkus.kubernetes-client.trust-certs=true

# ImagePullPolicy to use
# quarkus.openshift.image-pull-policy=IfNotPresent
quarkus.openshift.image-pull-policy=Always

# Default image builder (targets OpenShift) use -Dquarkus.container-image.builder=docker from command line if building for edge
quarkus.container-image.builder=openshift

quarkus.camel.native.reflection.serialization-enabled = true
quarkus.native.resources.includes=camel/*
camel.main.routes-include-pattern= classpath:camel/routes.xml

camel.main.source-location-enabled=true
camel.main.name=test

quarkus.http.host=0.0.0.0

# MQTT connectivity
%prod.mqtt.uri = paho:detection/+?brokerUrl=${MQTT_URL:tcp://broker-amq-mqtt:1883}
# %dev.mqtt.uri = paho:detection/+
%dev.mqtt.uri =  paho:detection/+?brokerUrl=tcp://localhost:61616

%prod.mqtt.uri.monitor = paho:monitor?brokerUrl=${MQTT_URL:tcp://broker-amq-mqtt:1883}
# %dev.mqtt.uri.monitor = paho:monitor
%dev.mqtt.uri.monitor =  paho:monitor?brokerUrl=tcp://localhost:61616

# Kafka connectivity
%prod.camel.component.kafka.brokers=${KAFKA_BOOTSTRAP:edge-kafka-bootstrap.edge.svc:9092}
%dev.camel.component.kafka.brokers=localhost:9092
kafka.topic.name=detection-results



# AI/ML engine connectivity
%prod.endpoint.detections.host = http:${INFERENCE_URL:object-detection-rest:8080}
%dev.endpoint.detections.host = http:localhost:8095

# pricing engine connectivity
%prod.endpoint.price.host = http:${PRICE_URL:price-engine:80}
%dev.endpoint.price.host = http:localhost:8090


# S3 connectivity
# camel.uri.s3=aws2-s3:\\$\{exchangeProperty.bucket\}.bucket?\
# accessKey=${S3_ACCESS_KEY}\
# &secretKey=${S3_SECRET_KEY}\
# &region=us-east-1\
# &uriEndpointOverride=${S3_ENDPOINT_URL:http://s3.openshift-storage.svc:80}\
# &overrideEndpoint=true\
# &useDefaultCredentialsProvider=false\
# &autoCreateBucket=true

# Simulated S3 for local testing
# %dev.camel.uri.s3=file:s3-\\$\{exchangeProperty.bucket\}
# %dev.camel.uri.s3=file:s3
# \u007B\u007D

backend.simulator=false
# %dev.backend.simulator=true

# filter to accept detections
score.accuracy=${ACCURACY:0.55}

quarkus.devservices.enabled=false

